package assignment2017;

import assignment2017.codeprovided.*;
public class MyGameState extends Connect4GameState {
	private int board[][];
	private int turn;
	public MyGameState(){
		int[][] board = new int[NUM_ROWS][NUM_COLS];
		int turn;
	}
	// Sets the board to empty and makes red turn first
	@Override
	public void startGame() {
		for(int i=0;i<NUM_ROWS;i++){
			for(int j=0;j<NUM_COLS;j++){
				board[i][j] = Connect4GameState.EMPTY;
			}
		}
		turn = Connect4GameState.RED;
	}

	@Override
	public void move(int col) throws ColumnFullException, IllegalColumnException {
		if(col < 0 || col > NUM_COLS){
			throw IllegalColumnException;
		}
		if(turn == Connect4GameState.RED){
			board[max][col] = Connect4GameState.RED;
		} else if(turn == Connect4GameState.YELLOW){
			board[max][col] = Connect4GameState.YELLOW;
		} else{
			move(col);
		}
	}

	@Override
	public int whoseTurn() {
		return turn;
	}

	@Override
	public int getCounterAt(int col, int row) throws IllegalColumnException, IllegalRowException {
		return board[row][col];
	}

	@Override
	public boolean isBoardFull() {
		for(int i=0;i<NUM_ROWS;i++){
			for(int j=0;j<NUM_COLS;j++){
				if(board[i][j]==Connect4GameState.EMPTY){ // && No players won the game.
					return false;
				}
			}
		}
		return true; // ?????????????????????????????????????????????????????????????????????????????????????????????????????/
	}

	@Override
	public boolean isColumnFull(int col) throws IllegalColumnException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int getWinner() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean gameOver() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Connect4GameState copy() {
		// TODO Auto-generated method stub
		return null;
	}

}
